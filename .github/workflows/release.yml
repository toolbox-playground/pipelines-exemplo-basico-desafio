# Esse fluxo de trabalho usa ações que não são certificadas pelo GitHub.
# São fornecidas por terceiros e regidas por
# termos de serviço, política de privacidade e suporte separados
# online.

# O GitHub recomenda fixar ações em um SHA de commit.
# Para obter uma versão mais recente, você precisará atualizar o SHA.
# Você também pode fazer referência a uma marca ou branch, mas a ação pode ser alterada sem aviso.

name: Publish Docker image

on:
  release:
    types: [published]  # Dispara o fluxo de trabalho quando uma nova versão é publicada

jobs:

  build:  # Nome do trabalho

    runs-on: ubuntu-latest  # Sistema operacional em que o trabalho será executado (no caso, Ubuntu)

    steps:  # Passos a serem executados no trabalho
      - uses: actions/checkout@v4  # Passo para fazer o checkout do repositório
      - name: Build Node.js  # Nome do passo
        uses: actions/setup-node@v4  # Passo para configurar o ambiente Node.js
        with:
          node-version: '18.x'  # Versão do Node.js a ser usada
      - name: Install dependencies  # Nome do passo
        run: cd app && npm install  # Comando para instalar as dependências do projeto

  
  test: # Nome do trabalho

    runs-on: ubuntu-latest # Sistema operacional em que o trabalho será executado (no caso, Ubuntu)
    needs: build # Define que o trabalho depende do trabalho "build"
    steps: # Passos a serem executados no trabalho
      - uses: actions/checkout@v4 # Passo para fazer o checkout do repositório
      - name: Test Node.js # Nome do passo
        uses: actions/setup-node@v4 # Passo para configurar o ambiente Node.js
        with:
          node-version: '18.x' # Versão do Node.js a ser usada
      - name: Install dependencies # Nome do passo
        run: cd app && npm install # Comando para instalar as dependências do projeto
      - name: Run tests # Nome do passo
        run: cd app && npm test # Comando para executar os testes do projeto

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest  # Define o sistema operacional em que o fluxo de trabalho será executado
    permissions:
      packages: write
      contents: read
      id-token: write
      attestations: write
    steps:
      - name: Check out the repo  # Faz o checkout do repositório
        uses: actions/checkout@v4

      - name: Log in to Docker Hub  # Faz login no Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Usa as credenciais do Docker Hub armazenadas como secretos no repositório
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker  # Extrai metadados (tags, labels) para o Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: "${{ secrets.DOCKER_NAMESPACE }}/${{ secrets.DOCKER_REPOSITORY }}"  # Define as imagens Docker a serem processadas

      - name: Build and push Docker image  # Constrói e envia a imagem Docker para o Docker Hub
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .  # Define o contexto do build, neste caso, o diretório atual
          file: ./Dockerfile  # Especifica o arquivo Dockerfile a ser usado
          push: true  # Define se a imagem deve ser enviada para o Docker Hub
          tags: ${{ steps.meta.outputs.tags }}  # Define as tags da imagem com base nos metadados extraídos
          labels: ${{ steps.meta.outputs.labels }}  # Define as labels da imagem com base nos metadados extraídos
      
      - name: Generate artifact attestation  # Gera uma atestação de artefato
        uses: actions/attest-build-provenance@v1 
        with:   
          subject-name: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/${{ secrets.DOCKER_REPOSITORY }}  # Define o nome do assunto da atestação
          subject-digest: ${{ steps.push.outputs.digest }}  # Define o digest do assunto da atestação
          push-to-registry: true  # Define se a atestação deve ser enviada para o registro
